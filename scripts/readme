1. 使用./as 编译clang版本spec，会在benchmark的build的对应文件夹中生成clang.s。

2. 使用./as 编译gcc版本spec

3. 使用perf分别测量 gcc 和clang 版本性能

4. 注意修改profiling和MaoPasses中的变量，否则找不到profiling file

5. ./merge.as编译gcc版本spec，as 中要指定刚刚clang的build路径，找到对应的clang.s




vim /GPUFS/nsccgz_yfdu_16/gta/mao/scripts/merge/as


/GPUFS/nsccgz_yfdu_16/gta/mao/scripts/merge/../mao /tmp/ccE01VXA.s --mao=-s --mao=READ=create_anonymous[1] -I spec_qsort -EL -mabi=lp64 --mao=-T --mao=-v --mao=ASM=o[mcf.o.mao.s.gcc.s] --mao=MergeFunction=i[/GPUFS/nsccgz_yfdu_16/gta/cpu2017/benchspec/CPU/505.mcf_r/build/build_base_clang-aarch64-mao-gta-64.0000/mcf.o.mao.s]+p[/GPUFS/nsccgz_yfdu_16/gta/cpu2017/benchspec/CPU/505.mcf_r/exe]+eg[mcf_r_base.gcc-aarch64-mao-gta-64]+ec[mcf_r_base.clang-aarch64-mao-gta-64] --mao=ASM=o[mcf.o.mao.s.gcc_clang.s]

